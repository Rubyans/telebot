Даний файл налічує в собі документації, а саме:
1. Документація для користувача;
2. Документація для розробника з мови програмування Python;
3. Документація для розробника з мови запитів SQL;

                     Документація для користувача

    В програмному забезпечені присутні 4 інтерфейси, а саме:

    -логіст;
    -водій;
    -адміністратор;
    -складальник.

    Для того, щоб почати роботу з доступними методами особистого кабінету,
потрібно пройти етап авторизації для кожно інтерфейсу, після проходження
етапу атворизації, користувачу надається можливість використовувати меню
підменю методів додатку.

                                Складальник

    Інтерфейс складальника налічує в собі меню з кнопок:
    - додати вантаж, кнопка, яка надає можливість додати ванаж за допомогою 
машину стану, тобто шляхом введення даних, які характеризують об`єкт;
    - видалити вантаж, кнопка, яка видаляє вантаж з БД за накладною кнопка;
    - переглянути вантаж, демонстрація даних вантажу, потрібно ввести номер 
накладної кнопка;
    - переглянути склади, демонстрація доступних складів складальника кнопка;
    - накладна вантажу, перегляд накладної за номером (накладна створюється 
автоматично)кнопка;
    - вийти, кнопка, яка виходить з інтерфейсу;

                                Водій

    Інтерфейс водія налічує в собі меню з кнопок:
    - вантаж на карті, кнопка передає координати про місцерозташування (для логіста);
    - накладна ТП, кнопка надає можливість переглянути ТП накладну;
    - накладна вантажу, кнопка надає можливість переглянути накладну вантажу;
    - додати автомобіль, кнопка надає можливість додати автомобіль за допомогою
машини станів.
    - вийти, кнопка, яка виходить з інтерфейсу.

                                Логіст

    Інтерфейс водія налічує в собі меню з кнопок:
    - інтерфейс логіста, кнопка, яка надає можливість перейти в інтерфейс логіста;
    - інтерфейс водія, кнопка, яка надає можливість перейти в інтерфейс водія;
    - інтерфейс складальника, кнопка, яка надає можливість перейти в інтерфейс складальника;
    - база даних, кнопка переходить в підменю;
    - зареєструвати користувача, кнопка переводить в  підменю додавання користувачів;
    - видалити користувача, кнопка видаляє користувача;
    - дані про працівників, кнопка виводить дані працівників;
    - робота з компанією, кнопка переходить в підменю обробки даних компанії;
    - робота зі складом, кнопка переходить в підменю обробки даних складу;
    - назад, кнопка повертає з підменю в меню;
    - вийти, кнопка, яка виходить з інтерфейсу.
    Адміністратор має можливість надати доступ до особистого кабінету користувача
шляхом реєстрування. Для цього за допомогою машини станів потрібно ввести контактні
дані майбутнього користувача.

                     Документація для розробника з мови програмування Python

    Програмне забезпечення написано на високорівневій мові Python, використовуючи бібліотеки:

    -Aiogram, бібліотека для створення телеграм-боту;
    -Qrcode, бібліотека для декодування QR-коду;
    -Pyzbar, бібліотека для кодування QR-коду;
    -Pil, бібліотека для обробка зображень;
    -SQLite, бібліотека для створення та обробки БД.

    Додаток створено за допомогою декомпозиційного підходу, тобто один код розділений між собою
за допомогою різних файлів.
    В папці keybords зберігаються файли, які мість в собі меню особистих кабінетів, кожне меню налічує
коментар, який пояснює навіщо він створений.

    В папці hendlers зберігаються файли, які містять функції отримання даних за допомогою
машини станів, та переведення між меню програми.

    В папці mybd зберігаються файли, які містять функції обробки бази даних з коментарями.

    В папці photos зберігаються зображення QR-кодів, які в подальшому обробляє програма.

    Файл bot_telegram.py, потрібен для реєстрування функцій в програмому забезпеченні.
    Файл create_bot.py, потрібен для запуску додатку, оскільки об`єднує в собі всі файли.

                     Документація для розробника з мови запитів SQL

    В програмному забезпеченні використовується бібліотека SQLite, яка використовує мову запитівSQL. 
Для зручної обробки БД рекомендується встановити СУБД DB SQLite, яка спрощує створення та обробку
бази даних. Всі функції, які звертаються до бази даних зберігаються в папці mybd у файлі databasepy.py.
    Кожна функція налічує в собі коментар, який надає змогу зрозуміти, навіщо дана функція створена.
