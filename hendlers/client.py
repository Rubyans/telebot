from email.message import Message
import io
from multiprocessing import Condition
import os
from pyzbar.pyzbar import decode
from PIL import Image
from io import BytesIO
from aiogram import types,Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from numpy import equal, sign
from create_bot import dp, bot
from mybd import databasepy
from aiogram.dispatcher.filters import Text
from keybords import kbautho,kbdriver,kblogist1,kblogist3,kblogist2,kblogist,kbdrive1,kbmenustart,kbdriwe,kbwareh,kbadmin1,kbmethodsave,kbwarehouse,kbtypecargo,kbqrcode,kblogist5,kbtypecar
#################################################—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫###################################################################
class savecargoo(StatesGroup):#–∫–ª–∞—Å –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫)
    name=State()
    savemethod=State()
    countcargoo=State()
    namewarehouse=State()
    typecargo=State()
    photo=State()

class deletecargoo(StatesGroup):#–∫–ª–∞—Å –≤–∏–¥–∞–ª–µ–Ω–Ω—è(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫)
    deletecargoo=State()
class demonst(StatesGroup):
    key=State()

#################################################–ª–æ–≥—ñ—Å—Ç###################################################################
class car(StatesGroup):# #–∫–ª–∞—Å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å
    namecar=State()
    numbercar=State()
    typecar=State()

class delivery(StatesGroup): #–∫–ª–∞—Å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É
    cityunload=State()
    time=State()
    Numbecar=State()
    Namecargo=State()

class deletenote(StatesGroup): #–¥–ª—è –≤–∏–¥–µ–ª–µ–Ω–Ω—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ—ó –Ω–∞–∫–ª–∞–¥–Ω–æ—ó
    codenote=State()

class demonstgeopoz(StatesGroup): #–¥–µ–º–æ—Å—Ç—Ä–∞—Ü—ñ—è –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—ó –∫–ª–∞—Å
    surname=State()

class logininprogramm(StatesGroup):#–∫–ª–∞—Å –¥–ª—è —ñ–Ω–¥–µ—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ –ª–æ–≥—ñ—Å—Ç–∞
    login=State()
    password=State()

class loginingdrive(StatesGroup):#–∫–ª–∞—Å –¥–ª—è —ñ–Ω–¥–µ—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ –≤–æ–¥—ñ—è
    login=State()
    password=State()

class loginingwareh(StatesGroup):#–∫–ª–∞—Å –¥–ª—è —ñ–Ω–¥–µ—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    login=State()
    password=State()

class loginingadmin(StatesGroup):#–∫–ª–∞—Å –¥–ª—è —ñ–Ω–¥–µ—Ñ—ñ–∫–∞—Ü—ñ—ó –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–Ω–∞—Ç–æ—Ä–∞
    login=State()
    password=State()

class nakladna(StatesGroup):
    surname=State()

class nakladnaqr(StatesGroup):
    photo=State()

class naklandawarehouse(StatesGroup):
    key=State()

################################################—Ñ—É–Ω–∫—Ü—ñ—ó –≤—Ö–æ–¥—É####################################################################################
async def command_start(message:types.Message):#–ø–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏ –∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–º
    try:
        await bot.send_message(message.from_user.id,'–í—ñ—Ç–∞—î–º–æ –≤ Cargogood',reply_markup=kbmenustart)
    except:
        await message.reply('–î—ñ–∞–ª–æ–≥ –∑ –±–æ—Ç–æ–º –º–æ–∂–ª–∏–≤–∏–π —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ –æ—Å–æ–±–∏—Å—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n @Cargogoodbot')

async def menulogist(message:types.Message):
    await bot.send_message(message.from_user.id,'–£–≤—ñ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç',reply_markup=kbautho)

async def menudriverman(message:types.Message):
    await bot.send_message(message.from_user.id,'–£–≤—ñ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç',reply_markup=kbdriwe)

async def menuwarehouseman(message:types.Message):
    await bot.send_message(message.from_user.id,'–£–≤—ñ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç',reply_markup=kbwareh)

async def menuadmin(message:types.Message):
    await bot.send_message(message.from_user.id,'–£–≤—ñ–π–¥—ñ—Ç—å –≤ –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç',reply_markup=kbadmin1)

######################################–≤—Ö—ñ–¥ —É –ø—Ä–æ–≥—Ä–∞–º—É –ª–æ–≥—ñ—Å—Ç–∞######################################################################
async def log_startlogist(message:types.Message):# –∑–∞–ø—É—Å–∫ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É –ª–æ–≥—ñ—Å—Ç–∞
    await logininprogramm.login.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω')

async def load_loginlogist(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ–Ω—É, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –ª–æ–≥—ñ—Å—Ç–∞
    async with state.proxy() as autho:
        autho['login']=message.text
    await logininprogramm.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')
      

async def load_passwordlogist(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–∞—Ä–æ–ª—é, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –ª–æ–≥—ñ—Å—Ç–∞
    async with state.proxy() as passw:
        passw['password']=message.text
    await databasepy.sqllogist(state)
    await bot.send_message(message.chat.id,'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ‚úÖ–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏')
    await state.finish()

async def loadfinishcllogist(message:types.Message):#–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Ö–µ–¥–µ—Ä-—Ñ–∞–π–ª –ë–î –ª–æ–≥—ñ—Å—Ç–∞
    await databasepy.logistfinish(message)

#####################################–≤—Ö—ñ–¥  —É –ø—Ä–æ–≥—Ä–∞–º—É –≤–æ–¥—ñ—è################################################################################################
async def log_startdriverman(message:types.Message):# –∑–∞–ø—É—Å–∫ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É –≤–æ–¥—ñ—è
    await loginingdrive.login.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω')

async def load_logindriverman(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ–Ω—É, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –≤–æ–¥—ñ—è
    async with state.proxy() as autho:
        autho['login']=message.text
    await loginingdrive.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')
      

async def load_passworddriverman(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–∞—Ä–æ–ª—é, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –≤–æ–¥—ñ—è
    async with state.proxy() as passw:
        passw['password']=message.text
    await databasepy.sqldriverman(state)
    await bot.send_message(message.chat.id,'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É ‚úî–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏')
    await state.finish()

async def loadfinishcldriverman(message:types.Message):#–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Ö–µ–¥–µ—Ä-—Ñ–∞–π–ª –ë–î –≤–æ–¥—ñ—è
    await databasepy.drivermanfinish(message)

#####################################–≤—Ö—ñ–¥ –∑ —É –ø—Ä–æ–≥—Ä–∞–º—É —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞################################################################################################
async def log_startwarehouseman(message:types.Message):# –∑–∞–ø—É—Å–∫ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    await loginingwareh.login.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω')

async def load_loginwarehouseman(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ–Ω—É, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    async with state.proxy() as autho:
        autho['login']=message.text
    await loginingwareh.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')
      

async def load_passwordwarehouseman(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–∞—Ä–æ–ª—é, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    async with state.proxy() as passw:
        passw['password']=message.text
    await databasepy.sqlwarehouseman(state)
    await bot.send_message(message.chat.id,'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É üÜó–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏')
    await state.finish()

async def loadfinishclwarehouseman(message:types.Message):#–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Ö–µ–¥–µ—Ä-—Ñ–∞–π–ª –ë–î —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    await databasepy.warehousefinish(message)

#####################################–≤—Ö—ñ–¥ —É –ø—Ä–æ–≥—Ä–∞–º—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞################################################################################################
async def log_startadmin(message:types.Message):# –∑–∞–ø—É—Å–∫ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É –¥–ª—è –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await loginingadmin.login.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω')

async def load_loginadmin(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ–Ω—É, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    async with state.proxy() as autho:
        autho['login']=message.text
    await loginingadmin.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å')
      

async def load_passwordadmin(message:types.Message,state=FSMContext):# –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–∞—Ä–æ–ª—é, –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    async with state.proxy() as passw:
        passw['password']=message.text
    await databasepy.sqladmin(state)
    await bot.send_message(message.chat.id,'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É üëå–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏')
    await state.finish()

async def loadfinishadmin(message:types.Message):#–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Ö–µ–¥–µ—Ä-—Ñ–∞–π–ª –ë–î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await databasepy.adminfinish(message)


###########################################–¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∞–Ω—Ç–∞–∂—É(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞)######################################################################################
async def savecargostart(message:types.Message):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    await savecargoo.name.set()
    await bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≤–∞–Ω—Ç–∞–∂—É")

async def savenamecargoo(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    async with state.proxy() as data:
        data['name']=message.text
    await savecargoo.next()
    await bot.send_message(message.chat.id,"–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–± –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è",reply_markup=kbmethodsave)

async def savemethodcargo(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    async with state.proxy() as data:
        data['savemethod']=message.text
    await savecargoo.next()
    await bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å —Ç–æ–Ω–∞–∂–Ω—ñ—Å—Ç—å –≤–∞–Ω—Ç–∞–∂—É",reply_markup=kbwarehouse)

async def savecargoocount(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    async with state.proxy() as data:
        data['countcargo']=message.text
    await savecargoo.next()
    await bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å–∫–ª–∞–¥—É")   

async def savecargoowarecode(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    async with state.proxy() as data:
        data['namewarehouse']=message.text
    await savecargoo.next()
    await bot.send_message(message.chat.id,"–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ü—ñ—ó",reply_markup=kbtypecargo) 

async def savecargoowaretype(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    async with state.proxy() as data:
        data['typecargo']=message.text
    await savecargoo.next()
    await bot.send_message(message.chat.id,"–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –º—ñ—Å—Ü–Ω–æ—Å—Ç—ñ –≤–∞–Ω—Ç–∞–∂—É",reply_markup=kbqrcode) 

    
async def savecargoqr(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–¥–æ–¥–∞–≤–∞–Ω–Ω—è)
    try:
        async with state.proxy() as data:
            data['photo']=message.text #—É —Ä–∞–∑—ñ –ø–æ—Ç—Ä–µ–±–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–∞—Å–∏–≤—É 
        await databasepy.dbkbnext(message,state)
        await state.finish()

    except Exception as e:
        await bot.send_message(message.chat.id,"–©–æ—Å—å –Ω–µ —Ç–∞–∫...–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–µ–ª—å–Ω—ñ—Å—Ç—å –≤–≤–æ–¥—É –Ω–∞–∑–≤–∏ —Å–∫–ª–∞–¥—É")


#######################################–≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤–∞–Ω—Ç–∞–∂—É(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞)#####################################################################
async def deletecargowarehousestart(message:types.Message):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–≤–∏–¥–∞–ª–µ–Ω–Ω—è)
    await deletecargoo.deletecargoo.set()
    await bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó")

async def deletecargowarehouse(message: types.Message,state=FSMContext):#–º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—É –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞(–≤–∏–¥–∞–ª–µ–Ω–Ω—è)
    async with state.proxy() as data:
        data['deletecargo']=message.text
    await databasepy.deletewarehousecargoo(message,state)
    await state.finish()

##########################################–¥–µ–º–æ—Å—Ç—Ä–∞—Ü—ñ—è –≤–∞–Ω—Ç–∞–∂—É(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫)####################################################################################
async def kbdemonst(message:types.Message):
    await demonst.key.set()
    await bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å –ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó —Å–∫–ª–∞–¥—É")

async def kbdemonst1(message: types.Message,state=FSMContext):
    try:
        async with state.proxy() as data:
            data['key']=message.text
        await databasepy.warehousedemostrate(message,state)   
        await state.finish()
    except Exception as e:
        await bot.send_message(message.chat.id,"–í–∞–Ω—Ç–∞–∂—É –∑–∞ –¥–∞–Ω–æ—é –Ω–∞–∫–ª–∞–¥–Ω–æ—é –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ —ñ—Å–Ω—É—î –Ω–∞–∫–ª–∞–¥–Ω–æ—ó")

##########################################–¥–µ–º–æ—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö —Å–∫–ª–∞–¥—É(—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫)####################################################################################

async def waredemonst(message:types.Message):
    await databasepy.demonstwareh(message)

############################################–ª–æ–≥—ñ—Å—Ç########################################################################################################

async def logistdemonstratiom(message:types.Message):#–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await bot.send_message(message.from_user.id,'–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–Ω–æ–ø–∫—É',reply_markup=kblogist1)

async def logistdemonstratiom2(message:types.Message):#–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –º–µ–Ω—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    await bot.send_message(message.from_user.id,'–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–Ω–æ–ø–∫—É',reply_markup=kblogist3)
async def logistadd(message:types.Message):#–ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –º–µ–Ω—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    await bot.send_message(message.from_user.id,'–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–Ω–æ–ø–∫—É',reply_markup=kblogist2)

##################################–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å##########################################################################################
async def addcar(message:types.Message): # –ø–æ—á–∞—Ç–æ–∫ –º–∞—à–∏–Ω–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    await car.namecar.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±—ñ–ª—è')

async def addcar1(message:types.Message,state=FSMContext):#–º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
    async with state.proxy() as carr:
        carr['namecar']=message.text
    await car.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±—ñ–ª—è')

async def addcar2(message:types.Message,state=FSMContext):#–º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
    async with state.proxy() as carr:
        carr['numbercar']=message.text
    await car.next()
    await bot.send_message(message.chat.id,'–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∞–≤—Ç–æ–º–æ–±—ñ–ª—è',reply_markup=kbtypecar)

async def addcar3(message:types.Message,state=FSMContext):#–º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
    try:
        async with state.proxy() as carr:
            carr['typecar']=message.text
        await car.next()
        await databasepy.addcarbd(message,state)
        await state.finish()
    except Exception as e:
        await bot.send_message(message.chat.id,"–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–∞–Ω—ñ, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É",reply_markup=kbdriver)

##################################–¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –º–∞—Ä—à—Ä—É—Ç##########################################################################################

async def addroute(message:types.Message): # –ø–æ—á–∞—Ç–æ–∫ –º–∞—à–∏–Ω–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    await delivery.cityunload.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ñ–î–†–ü–û–£ –∫–æ–º–ø–∞–Ω—ñ—ó –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è')

async def addroute1(message:types.Message,state=FSMContext):
    async with state.proxy() as rout:
        rout['ippload']=message.text
    await delivery.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å —á–∞—Å –ø—Ä–∏–±—É—Ç—Ç—è –≤–∞–Ω—Ç–∞–∂—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 22.02.2022)')

async def addroute2(message:types.Message,state=FSMContext):
    async with state.proxy() as rout:
        rout['time']=message.text
    await delivery.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±—ñ–ª—è')

async def addroute3(message:types.Message,state=FSMContext):
    async with state.proxy() as rout:
        rout['Numbercar']=message.text
    await delivery.next()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó –Ω–∞ –≤–∞–Ω—Ç–∞–∂')

async def addroute4(message:types.Message,state=FSMContext):
    try:
        async with state.proxy() as rout:
            rout['numbernaklanda']=message.text
        await delivery.next()
        await databasepy.addrout(message,state)
        await state.finish()
    except Exception as e:
        await bot.send_message(message.chat.id,"–©–æ—Å—å –Ω–µ —Ç–∞–∫...–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–µ–ª—å–Ω—ñ—Å—Ç—å –≤–≤–æ–¥—É –¥–∞–Ω–∏—Ö —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É")

#################################################–í–∏–¥–∞–ª–µ–Ω–Ω—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ—ó –Ω–∞–∫–ª–∞–¥–Ω–æ—ó –ª–æ–≥—ñ—Å—Ç###########################################################################################################
async def delnote(message:types.Message): # –ø–æ—á–∞—Ç–æ–∫ –º–∞—à–∏–Ω–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    await deletenote.codenote.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó')

async def delnote1(message:types.Message,state=FSMContext):
    try:
        async with state.proxy() as rout:
            rout['codenote']=message.text
        await deletenote.next()
        await databasepy.deletenote(message,state)
        await state.finish()
    except Exception as e:
        await bot.send_message(message.chat.id,"–©–æ—Å—å –Ω–µ —Ç–∞–∫...–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–µ–ª—å–Ω—ñ—Å—Ç—å –≤–≤–æ–¥—É –Ω–æ–º–µ—Ä—É –Ω–∞–∫–ª–∞–¥–Ω–æ—ó—Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É")

##################################–¥–µ–º–æ–Ω—Å—Ç–∞—Ä—Ü—ñ—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ—Å—Ç##########################################################################################
async def logistdemostrcompany(message:types.Message):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ–º–ø–∞–Ω—ñ—ó
    await databasepy.demonstrcompany(message)

async def logistdemostrcargoo(message:types.Message):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—É
    await databasepy.demonstrcargo(message)

async def logistdemostrcar(message:types.Message):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
    await databasepy.demonstrcar(message)

async def logistdemostrdriverman(message:types.Message):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ—Å—Ç–∞
    await databasepy.demonstrdriverman(message)

async def logistdemonstgeopoz(message:types.Message):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—ó
    await demonstgeopoz.surname.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ—ó –Ω–∞–∫–ª–∞–¥–Ω–æ—ó.')

async def logistdemonstgeopoz1(message:types.Message,state=FSMContext):#–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—ó
    async with state.proxy() as demonst:
        demonst['g']=message.text
    await databasepy.geodanbdprint(message,state)
    await state.finish()

##################################–ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ –ø—ñ–¥–º–µ–Ω—é –ª–æ–≥—ñ—Å—Ç –≤ –º–µ–Ω—é##########################################################################################
async def backout1(message:types.Message):
    await bot.send_message(message.from_user.id,'–ù–∞–∑–∞–¥',reply_markup=kblogist1) #–∑ –ø—ñ–¥–º–µ–Ω—é –≤ –º–µ–Ω—é


#############################################################–≤–∏—Ö—ñ–¥ –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø—Ä–æ–≥—Ä–∞–º–∏###############################################################################################
async def backout(message:types.Message):
    await bot.send_message(message.from_user.id,'–î—è–∫—É—é, —â–æ –∫–æ—Ä–∏—Å—Ç—É—î—Ç–µ—Å—å –Ω–∞—à–∏–º –¥–æ–¥–∞—Ç–∫–æ–º',reply_markup=kblogist)#–≤–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏


#################################################–≥–µ–æ–ø–æ–∑–∏—Ü—ñ—è –ª–æ–≥—ñ—Å—Ç##########################################################################################################
async def geopoz1(message:types.Message,state=FSMContext):
    await bot.send_message(message.from_user.id,"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–µ—Ä–µ–¥–∞—á–∞ –º—ñ—Å—Ü–µ—Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è",reply_markup=kbdrive1)

async def geopoz2(message): #–≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ –ë–î
    await databasepy.geodanbd(message)


#############################################–Ω–∞–∫–ª–∞–¥–Ω–∞ –≤–∞–Ω—Ç–∞–∂—É/–Ω–∞–∫–ª–∞–¥–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è########################################################

async def rep(message:types.Message):
    await bot.send_message(message.chat.id,'–û–±–µ—Ä—ñ—Ç—å —Å–ø–æ—Å—ñ–±',reply_markup=kblogist5)


async def repqr(message:types.Message): #–Ω–∞–∫–ª–∞–¥–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    await nakladnaqr.photo.set()
    await bot.send_message(message.chat.id,'–ù–∞–¥—ñ—à–ª—ñ—Ç—å QR-–∫–æ–¥ –Ω–∞–∫–ª–∞–¥–Ω–æ—ó')


async def repqr1(message:types.Message,state=FSMContext): #–ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –Ω–∞–∫–ª–∞–¥–Ω–æ—ó —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    async with state.proxy() as data:
        data['phototext']=message.text #—É —Ä–∞–∑—ñ –ø–æ—Ç—Ä–µ–±–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–∞—Å–∏–≤—É 
        file_info = await bot.get_file(message.photo[len(message.photo)-1].file_id)
        downloaded_file = await bot.download_file(file_info.file_path)
        src=file_info.file_path
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file.getvalue())
        await databasepy.dbsavecargo(state,message,file_info)
        await databasepy.dbsavecargo1(message,state)
        await state.finish()




async def report(message:types.Message): #–Ω–∞–∫–ª–∞–¥–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    await nakladna.surname.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ—ó –Ω–∞–∫–ª–∞–¥–Ω–æ—ó')

async def report1(message:types.Message,state=FSMContext): #–ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –Ω–∞–∫–ª–∞–¥–Ω–æ—ó —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    async with state.proxy() as rep:
        rep['g']=message.text
    await databasepy.reportvoidy(message,state)
    await state.finish()

async def report2(message:types.Message): #–Ω–∞–∫–ª–∞–¥–Ω–∞ –≤–∞–Ω—Ç–∞–∂—É
    await naklandawarehouse.key.set()
    await bot.send_message(message.chat.id,'–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó –≤–∞–Ω—Ç–∞–∂—É –Ω–∞ —Å–∫–ª–∞–¥—ñ')

async def report2_2(message:types.Message,state=FSMContext): #–ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –Ω–∞–∫–ª–∞–¥–Ω–æ—ó –≤–∞–Ω—Ç–∞–∂—É
    async with state.proxy() as rep:
        rep['g']=message.text
    await databasepy.reportwarehouse(message,state)
    await state.finish()

#####################################—Ä–µ–≥—ñ—Å—Ç—Ä–∞—Ü—ñ—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤###################################################
def registet_hand_clients(dp:Dispatcher):

#####################################–≤—Ö—ñ–¥ –≤ –ø—Ä–æ–≥—Ä–∞–º—É###################################################
    dp.register_message_handler(command_start,commands=['start','–í–∏–π—Ç–∏','–ù–∞–∑–∞–¥'])

    dp.register_message_handler(menulogist,Text(equals='ü¶∏‚Äç‚ôÇÔ∏è–ö–∞–±—ñ–Ω–µ—Ç –ª–æ–≥—ñ—Å—Ç–∞'),state=None) #
    dp.register_message_handler(log_startlogist,Text(equals='üîë–£–≤—ñ–π—Ç–∏'),state=None)#######       —Ñ—É–Ω–∫—Ü—ñ—ó –∞—É–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥–ª—è –ª–æ–≥—ñ—Å—Ç–∞
    dp.register_message_handler(load_loginlogist,content_types='text',state=logininprogramm.login)##
    dp.register_message_handler(load_passwordlogist,content_types='text',state=logininprogramm.password)##
    dp.register_message_handler(loadfinishcllogist,Text(equals='‚úÖ–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))##

    dp.register_message_handler(menudriverman,Text(equals='üöõ–ö–∞–±—ñ–Ω–µ—Ç –≤–æ–¥—ñ—è'),state=None) #
    dp.register_message_handler(log_startdriverman,Text(equals='üóù–£–≤—ñ–π—Ç–∏'),state=None)#######       —Ñ—É–Ω–∫—Ü—ñ—ó –∞—É–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥–ª—è –≤–æ–¥—ñ—è
    dp.register_message_handler(load_logindriverman,content_types='text',state=loginingdrive.login)##
    dp.register_message_handler(load_passworddriverman,content_types='text',state=loginingdrive.password)##
    dp.register_message_handler(loadfinishcldriverman,Text(equals='‚úî–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))##


    dp.register_message_handler(menuwarehouseman,Text(equals='üì¶–ö–∞–±—ñ–Ω–µ—Ç —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞'),state=None) #
    dp.register_message_handler(log_startwarehouseman,Text(equals='üîß–£–≤—ñ–π—Ç–∏'),state=None)#######       —Ñ—É–Ω–∫—Ü—ñ—ó –∞—É–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥–ª—è —Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫–∞
    dp.register_message_handler(load_loginwarehouseman,content_types='text',state=loginingwareh.login)##
    dp.register_message_handler(load_passwordwarehouseman,content_types='text',state=loginingwareh.password)##
    dp.register_message_handler(loadfinishclwarehouseman,Text(equals='üÜó–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))##


    dp.register_message_handler(menuadmin,Text(equals='üßù–ö–∞–±—ñ–Ω–µ—Ç –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞'),state=None) #
    dp.register_message_handler(log_startadmin,Text(equals='üîê–£–≤—ñ–π—Ç–∏'),state=None)#######       —Ñ—É–Ω–∫—Ü—ñ—ó –∞—É–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    dp.register_message_handler(load_loginadmin,content_types='text',state=loginingadmin.login)##
    dp.register_message_handler(load_passwordadmin,content_types='text',state=loginingadmin.password)##
    dp.register_message_handler(loadfinishadmin,Text(equals='üëå–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏'))##


#####################################—Å–∫–ª–∞–¥–∞–ª—å–Ω–∏–∫###################################################
    dp.register_message_handler(kbdemonst,Text(equals='üì∫–ü–µ—Ä–µ–≥–ª—è–¥ –≤–∞–Ω—Ç–∞–∂—É'),State=None)# –ø–µ—Ä–µ–≥–ª—è–¥ –¥–∞–Ω–∏—Ö –ø—Ä–æ –≤–∞–Ω—Ç–∞–∂ –Ω–∞ —Å–∫–ª–∞–¥—ñ
    dp.register_message_handler(kbdemonst1,content_types='text',state=demonst.key)# –ø–µ—Ä–µ–≥–ª—è–¥ –¥–∞–Ω–∏—Ö –ø—Ä–æ –≤–∞–Ω—Ç–∞–∂ –Ω–∞ —Å–∫–ª–∞–¥—ñ

    dp.register_message_handler(savecargostart,Text(equals='üñä–î–æ–¥–∞—Ç–∏ –≤–∞–Ω—Ç–∞–∂'),State=None)# –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    dp.register_message_handler(savenamecargoo,content_types='text',state=savecargoo.name)#
    dp.register_message_handler(savecargoocount,content_types='text',state=savecargoo.countcargoo)#
    dp.register_message_handler(savemethodcargo,content_types='text',state=savecargoo.savemethod)#
    dp.register_message_handler(savecargoowarecode,content_types='text',state=savecargoo.namewarehouse)#
    dp.register_message_handler(savecargoowaretype,content_types='text',state=savecargoo.typecargo)#

    dp.register_message_handler(savecargoqr,content_types='text',state=savecargoo.photo)#


    dp.register_message_handler(deletecargowarehousestart,Text(equals='üóë–í–∏–¥–∞–ª–∏—Ç–∏ –≤–∞–Ω—Ç–∞–∂'),State=None)# –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    dp.register_message_handler(deletecargowarehouse,content_types='text',state=deletecargoo.deletecargoo)#

    dp.register_message_handler(waredemonst,Text(equals='üì∫–ü–µ—Ä–µ–≥–ª—è–¥ —Å–∫–ª–∞–¥—ñ–≤'))# –ø–µ—Ä–µ–≥–ª—è–¥ –¥–∞–Ω–∏—Ö –ø—Ä–æ —Å–∫–ª–∞–¥


#####################################–ª–æ–≥—ñ—Å—Ç##################################################################
    dp.register_message_handler(logistdemonstratiom,Text(equals='üóÉ–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö'))# –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    dp.register_message_handler(logistdemonstratiom2,Text(equals='üíª–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è'))# –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö (—É—Å—ñ—Ö –º–µ–Ω—é)
    dp.register_message_handler(logistdemostrcompany,Text(equals='üì∫–ö–æ–º–ø–∞–Ω—ñ—ó'))# –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –∫–æ–º–ø–∞–Ω—ñ—ó
    dp.register_message_handler(logistdemostrcargoo,Text(equals='üì∫–í–∞–Ω—Ç–∞–∂—ñ'))# –¥–µ–º–æ–Ω—Å—Ç–∞—Ä—Ü—ñ—è –¥–∞–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—É
    dp.register_message_handler(logistdemostrcar,Text(equals='üì∫–ê–≤—Ç–æ–º–æ–±—ñ–ª—ñ'))# –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç—É
    dp.register_message_handler(logistdemostrdriverman,Text(equals='üì∫–í–æ–¥—ñ—ó'))# –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç—É

    dp.register_message_handler(logistdemonstgeopoz,Text(equals='üá∫üá¶–ú—ñ—Å—Ü–µ—Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤–∞–Ω—Ç–∞–∂–∞'),State=None)# –ø–µ—Ä–µ–≥–ª—è–¥ –≤–æ–¥—ñ—è –Ω–∞ –∫–∞—Ä—Ç—ñ –¥–ª—è –≥–æ–ª—ñ—Å—Ç–∞
    dp.register_message_handler(logistdemonstgeopoz1,content_types='text',state=demonstgeopoz.surname)#–ø–µ—Ä–µ–≥–ª—è–¥ –≤–æ–¥—ñ—è –Ω–∞ –∫–∞—Ä—Ç—ñ –¥–ª—è –≥–æ–ª—ñ—Å—Ç–∞

    dp.register_message_handler(delnote,Text(equals='üóë–í–∏–¥–∞–ª–∏—Ç–∏ –¢–ù'),State=None)# –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ—Å—Ç
    dp.register_message_handler(delnote1,content_types='text',state=deletenote.codenote)# –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ—Å—Ç

    dp.register_message_handler(logistadd,Text(equals='üìå–î–æ–¥–∞—Ç–∏ –¥–∞–Ω—ñ'))# –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ª–æ–≥—ñ—Å—Ç

    dp.register_message_handler(addcar,Text(equals='‚úí–î–æ–¥–∞—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å'),State=None)# –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è –≤–æ–¥—ñ—î–º
    dp.register_message_handler(addcar1,content_types='text',state=car.namecar)#
    dp.register_message_handler(addcar2,content_types='text',state=car.numbercar)#
    dp.register_message_handler(addcar3,content_types='text',state=car.typecar)#

    dp.register_message_handler(addroute,Text(equals='üìå–î–æ–¥–∞—Ç–∏ –¢–ù'),State=None)# –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    dp.register_message_handler(addroute1,content_types='text',state=delivery.cityunload)#
    dp.register_message_handler(addroute2,content_types='text',state=delivery.time)#
    dp.register_message_handler(addroute3,content_types='text',state=delivery.Numbecar)#
    dp.register_message_handler(addroute4,content_types='text',state=delivery.Namecargo)#

####################################—Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—ó(–≤–æ–¥—ñ–π)##############################################
    dp.register_message_handler(geopoz1,Text(equals='üá∫üá¶–í–∞–Ω—Ç–∞–∂ –Ω–∞ –∫–∞—Ä—Ç—ñ'),State=None)#–ø–æ—á–∞—Ç–æk —Ä–æ–±–æ—Ç–∏ –∑ –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—î—é
    dp.register_message_handler(geopoz2,content_types=['location'])#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥

####################################—Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –Ω–∞–∫–ª–∞–¥–Ω–æ—ó(–≤–æ–¥—ñ–π)##############################################
    
    dp.register_message_handler(rep,Text(equals='üìã–ù–∞–∫–ª–∞–¥–Ω–∞ —Å–∫–ª–∞–¥—É'))#–ø–µ—Ä–µ—Ö—ñ–¥ –∑ –º–µ–Ω—é –≤ –ø—ñ–¥–º–µ–Ω—é

    dp.register_message_handler(repqr,Text(equals='üì∑–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ QR-code'),State=None)#–ø–µ—Ä–µ—Ö—ñ–¥ –∑ –º–µ–Ω—é –≤ –ø—ñ–¥–º–µ–Ω—é
    dp.register_message_handler(repqr1,content_types='photo',state=nakladnaqr.photo)#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥



    dp.register_message_handler(report,Text(equals='üìã–ù–∞–∫–ª–∞–¥–Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞'),State=None)#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥
    dp.register_message_handler(report1,content_types='text',state=nakladna.surname)#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥

    dp.register_message_handler(report2,Text(equals='‚å®–í–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä'),State=None)#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥
    dp.register_message_handler(report2_2,content_types='text',state=naklandawarehouse.key)#–ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–∏—Ö –≤ –±–¥

####################################—Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ø—ñ–¥–º–µ–Ω—é –≤ –º–µ–Ω—é –∞–±–æ –≤–∏—Ö—ñ–¥ –∑ –¥–æ–¥–∞—Ç–∫—É######################################
    dp.register_message_handler(backout1,Text(equals='üë®‚Äçüíº–ù–∞–∑–∞–¥'))# –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ –ø—ñ–¥–º–µ–Ω—é –≤ –º–µ–Ω—é –ª–æ–≥—ñ—Å—Ç–∞
    dp.register_message_handler(backout,Text(equals='üë©‚Äçüíº–ù–∞–∑–∞–¥'))# –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑ –ø—ñ–¥–º–µ–Ω—é –≤ –º–µ–Ω—é –ª–æ–≥—ñ—Å—Ç–∞

####################################—Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏—Ö–æ–¥—É –∑ —Å–∏—Å—Ç–µ–º–∏######################################
    dp.register_message_handler(command_start,Text(equals='‚ùå–í–∏–π—Ç–∏'))# –≤–∏—Ö—ñ–¥ –∑ –±—É–¥—å-—è–∫–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø—Ä–æ–≥—Ä–∞–º–∏


